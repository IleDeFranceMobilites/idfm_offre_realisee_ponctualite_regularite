---
name: Python CI

trigger:
  - main


variables:
  vmImageName: 'ubuntu-latest'
  workingDirectory: '$(System.DefaultWorkingDirectory)'

stages:

  - stage: Validate
    displayName: Validate code
    jobs:
      - job: Validate
        displayName: Validate
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.10'
            displayName: 'Use Python 3.10'

          - script: |
              pip install --upgrade pip
              pip install -r requirements.txt
            displayName: 'Installer les dépendances'

          - script: |
              pip install -r requirements_dev.txt
            displayName: 'Installer les dépendances de dev'

          - script: |
              flake8 .
            displayName: 'Valider la syntaxe avec Flake8'

          - script: |
              vulture . --ignore-names "mytimer,*_fixture,return_value" --exclude="source"
            displayName: "Vérifier l'absence de code mort Vulture"

          - script: |
              safety check -r requirements.txt
            displayName: 'Valider les dépendances Safety sur requirements.txt'

          - script: |
              safety check -r requirements_dev.txt
            displayName: 'Valider les dépendances Safety sur requirements_dev.txt'

          - script: |
              bandit .
            displayName: "Valider l'absence de faille de sécurité avec Bandit"

          - script: |
              python -m pytest tests
            displayName: "Lancer les tests avec pytest"

  - stage: Build
    displayName: Build stage
    dependsOn: Validate
    condition: and(eq(variables['Build.SourceBranch'], 'refs/heads/main'), succeeded())

    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - bash: |
              if [ -f extensions.csproj ]
              then
                  dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
              fi
            workingDirectory: $(workingDirectory)
            displayName: 'Build extensions'

          - task: UsePythonVersion@0
            displayName: 'Use Python 3.10'
            inputs:
              versionSpec: 3.10

          - script: |
              pip install --upgrade pip
              pip install -r requirements.txt
              pip install -r requirements_build.txt
            displayName: 'Installer les dépendances'

          - bash: |
              python -m build --wheel
            workingDirectory: $(workingDirectory)
            displayName: 'Build package'

          - task: TwineAuthenticate@1
            inputs:
              artifactFeed: 'Data Analytics/idfm_feed'
            displayName: 'Twine Authenticate'

          - script: |
              python -m twine upload -r idfm_feed --config-file $(PYPIRC_PATH) dist/*.whl
            displayName: 'Upload to feed'